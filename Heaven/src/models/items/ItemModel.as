package models.items {
	import models.stats.ImmutableStats;
	import models.stats.Stats;
	import models.characters.CharacterModel;
	import data.GameObjectModel;
	import enums.SkillItemEffectType;
	
	/**
	 * Item model
	 * @author Ken
	 * Model of the item
	 * Contains stats and special effects if any
	 */
	public class ItemModel implements GameObjectModel {
		
		/** Code of this item */
		private var _itemCode:int;
//		public function get itemCode():int { return _itemCode; }
		public function get code():int { return _itemCode; }
		/** Name of this item */
		private var _itemName:String;
//		public function get itemName():String { return _itemName; }
		public function get name():String { return _itemName; }
		/** Base stats of this item */
		private var _baseStats:ImmutableStats;
		/** Base stats of this item */
//		public function get baseStats():ImmutableStats { return _baseStats; }
		public function get baseStats():Stats {
			return Stats.getStatsFromImmutableStats(_baseStats);
		}
		/**
		 * Stats of the item, to increase/decrease in character on whom
		 * this item is used
		 */
		public var stats:Stats;
		/** Description of this item */
		private var _description:String;
		public function get description():String { return _description; }
		/** Effect type of this item */
		private var _effectType:SkillItemEffectType;
		/** Duration of this item, in frames - if effect type is per second only */
		private var _duration:int;
		
		/**
		 * Convenient constructor
		 * 
		 * @param	itemCode
		 * 			is the code of this item
		 * @param	itemName
		 * 			is the name of this item
		 * @param	baseStats
		 * 			is the base stats of this item
		 * @param	effectType
		 * 			is the effect type of this item
		 * @param	duration
		 * 			is the duration of this item, in frames - if effect type is per second only
		 * @param	description
		 * 			is the description of this character. if no description is provided,
		 * 			an automated description will be created
		 */
		public function ItemModel(itemCode:int, itemName:String, baseStats:ImmutableStats, description:String = "",
								  effectType:SkillItemEffectType = null,
								  duration:int = 0) {
			_itemCode = itemCode; _itemName = itemName;
			_baseStats = baseStats;
			stats = Stats.getStatsFromImmutableStats(baseStats);
			_description = description;
			if (effectType == null) _effectType = SkillItemEffectType.ONCE;
			else _effectType = effectType;
			// If no description is given, this means that the description can be auto generated
			if (_description == "")
				autoGenerateDescription();
			_duration = duration;
		}
		
		/**
		 * Autogenerate the description for this item
		 */
		private function autoGenerateDescription():void {
			
		}
		
		/**
		 * Use this item on a character
		 * 
		 * @param	characterModel
		 * 			is the model of the character on which this item is used
		 */
		public function usedOn(characterModel:CharacterModel):void {
			characterModel.stats.combineStats(stats);
			characterModel.stats.adjustHpMp();
		}
		
		public function clone():GameObjectModel {
			return new ItemModel(_itemCode, _itemName, _baseStats, description, _effectType, _duration);
		}
	}
}